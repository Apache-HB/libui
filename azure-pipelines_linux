# 31 march 2019

variables:
  releaseExamples: 'controlgallery cpp-multithread datetime drawtext histogram tester timer'

jobs:

# linux {

- job: linux_386_shared
  displayName: 'Linux 386 Shared'
  pool:
    vmImage: 'ubuntu-16.04'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/setup-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/linux-386-install-gtk-dev-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      beforeConfigure: export CFLAGS=-m32 CXXFLAGS=-m32 PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig
      defaultLibrary: shared
  - template: azure-pipelines/build.yml
  - template: azure-pipelines/artifacts.yml
    parameters:
      os: linux
      arch: 386
      libtype: shared
      libfiles: libui.so.0
      osHeader: ui_unix.h

- job: linux_386_static
  displayName: 'Linux 386 Static'
  pool:
    vmImage: 'ubuntu-16.04'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/setup-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/linux-386-install-gtk-dev-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      beforeConfigure: export CFLAGS=-m32 CXXFLAGS=-m32 PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig
      defaultLibrary: static
  - template: azure-pipelines/build.yml
  - template: azure-pipelines/artifacts.yml
    parameters:
      os: linux
      arch: 386
      libtype: static
      libfiles: libui.a
      osHeader: ui_unix.h

- job: linux_amd64_shared
  displayName: 'Linux amd64 Shared'
  pool:
    vmImage: 'ubuntu-16.04'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/setup-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/linux-install-gtk-dev-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      defaultLibrary: shared
  - template: azure-pipelines/build.yml
  - template: azure-pipelines/artifacts.yml
    parameters:
      os: linux
      arch: amd64
      libtype: shared
      libfiles: libui.so.0
      osHeader: ui_unix.h

- job: linux_amd64_static
  displayName: 'Linux amd64 Static'
  pool:
    vmImage: 'ubuntu-16.04'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/setup-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/linux-install-gtk-dev-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      defaultLibrary: static
  - template: azure-pipelines/build.yml
  - template: azure-pipelines/artifacts.yml
    parameters:
      os: linux
      arch: amd64
      libtype: static
      libfiles: libui.a
      osHeader: ui_unix.h

# }

# mac {

# TODO beforeConfigure/beforeBuild: export SDKROOT=$(xcodebuild -version -sdk macosx10.13 Path)?

- job: darwin_amd64_shared
  displayName: 'Darwin amd64 Shared'
  pool:
    vmImage: 'macos-10.13'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/setup-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/darwin-install-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      defaultLibrary: shared
  - template: azure-pipelines/build.yml
  - template: azure-pipelines/artifacts.yml
    parameters:
      os: darwin
      arch: amd64
      libtype: shared
      libfiles: libui.A.dylib
      osHeader: ui_darwin.h

- job: darwin_amd64_static
  displayName: 'Darwin amd64 10.14 SDK Static'
  pool:
    vmImage: 'macos-10.13'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/setup-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/darwin-install-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      defaultLibrary: static
  - template: azure-pipelines/build.yml
  - template: azure-pipelines/artifacts.yml
    parameters:
      os: darwin
      arch: amd64
      libtype: static
      libfiles: libui.a
      osHeader: ui_darwin.h

# }
