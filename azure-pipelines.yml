# 31 march 2019

variables:
  releaseExamples: 'controlgallery cpp-multithread datetime drawtext histogram tester timer'

jobs:
- job: windows_386_msvc2015_shared_ninja
  displayName: 'Windows 386 MSVC2015 Shared Ninja'
  pool:
    vmImage: 'vs2015-win2012r2'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/vs2015-install-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/windows-install-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      beforeConfigure: call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
      defaultLibrary: shared
      backend: ninja
  - template: azure-pipelines/build-ninja.yml
    parameters:
      beforeBuild: call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
  - template: azure-pipelines/darwinunix-artifacts.yml
    parameters:
      os: windows
      arch: 386
      toolchain: msvc2015
      libtype: shared
      libfiles: libui.dll libui.exp libui.lib
      osHeader: ui_windows.h

- job: windows_386_msvc2015_static_ninja
  displayName: 'Windows 386 MSVC2015 Static Ninja'
  pool:
    vmImage: 'vs2015-win2012r2'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/vs2015-install-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/windows-install-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      beforeConfigure: call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
      defaultLibrary: static
      backend: ninja
  - template: azure-pipelines/build-ninja.yml
    parameters:
      beforeBuild: call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
      afterBuild: ren build\meson-out\libui.a build\meson-out\libui.lib
  - template: azure-pipelines/windows-artifacts.yml
    parameters:
      os: windows
      arch: 386
      toolchain: msvc2015
      libtype: static
      libfiles: libui.lib
      osHeader: ui_windows.h

- job: windows_386_msvc2017_shared_ninja
  displayName: 'Windows 386 MSVC2017 Shared Ninja'
  pool:
    vmImage: 'vs2017-win2016'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/setup-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/windows-install-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      beforeConfigure: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86
      defaultLibrary: shared
      backend: ninja
  - template: azure-pipelines/build-ninja.yml
    parameters:
      beforeBuild: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86
  - template: azure-pipelines/windows-artifacts.yml
    parameters:
      os: windows
      arch: 386
      toolchain: msvc2017
      libtype: shared
      libfiles: libui.dll libui.exp libui.lib
      osHeader: ui_windows.h

- job: windows_386_msvc2017_static_ninja
  displayName: 'Windows 386 MSVC2017 Static Ninja'
  pool:
    vmImage: 'vs2017-win2016'
  workspace:
    clean: all
  steps:
  - template: azure-pipelines/setup-python3.yml
  - template: azure-pipelines/install-latest-meson.yml
  - template: azure-pipelines/windows-install-ninja.yml
  - template: azure-pipelines/configure.yml
    parameters:
      beforeConfigure: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86
      defaultLibrary: static
      backend: ninja
  - template: azure-pipelines/build-ninja.yml
    parameters:
      beforeBuild: call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86
      afterBuild: ren build\meson-out\libui.a build\meson-out\libui.lib
  - template: azure-pipelines/windows-artifacts.yml
    parameters:
      os: windows
      arch: 386
      toolchain: msvc2017
      libtype: static
      libfiles: libui.lib
      osHeader: ui_windows.h
